'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.18063
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18063.
'
Namespace CloudTranslation
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="Service1Soap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class Service1
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private GetUniqueScriptNamesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private searchontargetOperationCompleted As System.Threading.SendOrPostCallback
        
        Private update_entryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private searchonenUSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private searchonidext_rangeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private searchonidextOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Get_SystemNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMasterTablesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PreTranslateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateActivityOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUserListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUserActivityOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPreviousDateRecordsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateCloudOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.SFSF_UnitTest.My.MySettings.Default.SFSF_UnitTest_CloudTranslation_Service1
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event GetUniqueScriptNamesCompleted As GetUniqueScriptNamesCompletedEventHandler
        
        '''<remarks/>
        Public Event searchontargetCompleted As searchontargetCompletedEventHandler
        
        '''<remarks/>
        Public Event update_entryCompleted As update_entryCompletedEventHandler
        
        '''<remarks/>
        Public Event searchonenUSCompleted As searchonenUSCompletedEventHandler
        
        '''<remarks/>
        Public Event searchonidext_rangeCompleted As searchonidext_rangeCompletedEventHandler
        
        '''<remarks/>
        Public Event searchonidextCompleted As searchonidextCompletedEventHandler
        
        '''<remarks/>
        Public Event Get_SystemNameCompleted As Get_SystemNameCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMasterTablesCompleted As GetMasterTablesCompletedEventHandler
        
        '''<remarks/>
        Public Event PreTranslateCompleted As PreTranslateCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateActivityCompleted As UpdateActivityCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUserListCompleted As GetUserListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUserActivityCompleted As GetUserActivityCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPreviousDateRecordsCompleted As GetPreviousDateRecordsCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateCloudCompleted As UpdateCloudCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUniqueScriptNames", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUniqueScriptNames() As String
            Dim results() As Object = Me.Invoke("GetUniqueScriptNames", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUniqueScriptNamesAsync()
            Me.GetUniqueScriptNamesAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUniqueScriptNamesAsync(ByVal userState As Object)
            If (Me.GetUniqueScriptNamesOperationCompleted Is Nothing) Then
                Me.GetUniqueScriptNamesOperationCompleted = AddressOf Me.OnGetUniqueScriptNamesOperationCompleted
            End If
            Me.InvokeAsync("GetUniqueScriptNames", New Object(-1) {}, Me.GetUniqueScriptNamesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUniqueScriptNamesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUniqueScriptNamesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUniqueScriptNamesCompleted(Me, New GetUniqueScriptNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/searchontarget", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function searchontarget(ByVal search_string As String, ByVal table_name As String) As Answer()
            Dim results() As Object = Me.Invoke("searchontarget", New Object() {search_string, table_name})
            Return CType(results(0),Answer())
        End Function
        
        '''<remarks/>
        Public Overloads Sub searchontargetAsync(ByVal search_string As String, ByVal table_name As String)
            Me.searchontargetAsync(search_string, table_name, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub searchontargetAsync(ByVal search_string As String, ByVal table_name As String, ByVal userState As Object)
            If (Me.searchontargetOperationCompleted Is Nothing) Then
                Me.searchontargetOperationCompleted = AddressOf Me.OnsearchontargetOperationCompleted
            End If
            Me.InvokeAsync("searchontarget", New Object() {search_string, table_name}, Me.searchontargetOperationCompleted, userState)
        End Sub
        
        Private Sub OnsearchontargetOperationCompleted(ByVal arg As Object)
            If (Not (Me.searchontargetCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent searchontargetCompleted(Me, New searchontargetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/update_entry", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function update_entry(ByVal mytype As Byte, ByVal myscriptID As String, ByVal myUser As String, ByVal myIDext As Integer, ByVal myTable As String, ByVal enUS As String, ByVal lang As String) As Boolean
            Dim results() As Object = Me.Invoke("update_entry", New Object() {mytype, myscriptID, myUser, myIDext, myTable, enUS, lang})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub update_entryAsync(ByVal mytype As Byte, ByVal myscriptID As String, ByVal myUser As String, ByVal myIDext As Integer, ByVal myTable As String, ByVal enUS As String, ByVal lang As String)
            Me.update_entryAsync(mytype, myscriptID, myUser, myIDext, myTable, enUS, lang, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub update_entryAsync(ByVal mytype As Byte, ByVal myscriptID As String, ByVal myUser As String, ByVal myIDext As Integer, ByVal myTable As String, ByVal enUS As String, ByVal lang As String, ByVal userState As Object)
            If (Me.update_entryOperationCompleted Is Nothing) Then
                Me.update_entryOperationCompleted = AddressOf Me.Onupdate_entryOperationCompleted
            End If
            Me.InvokeAsync("update_entry", New Object() {mytype, myscriptID, myUser, myIDext, myTable, enUS, lang}, Me.update_entryOperationCompleted, userState)
        End Sub
        
        Private Sub Onupdate_entryOperationCompleted(ByVal arg As Object)
            If (Not (Me.update_entryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent update_entryCompleted(Me, New update_entryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/searchonenUS", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function searchonenUS(ByVal search_string As String, ByVal table_name As String) As Answer()
            Dim results() As Object = Me.Invoke("searchonenUS", New Object() {search_string, table_name})
            Return CType(results(0),Answer())
        End Function
        
        '''<remarks/>
        Public Overloads Sub searchonenUSAsync(ByVal search_string As String, ByVal table_name As String)
            Me.searchonenUSAsync(search_string, table_name, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub searchonenUSAsync(ByVal search_string As String, ByVal table_name As String, ByVal userState As Object)
            If (Me.searchonenUSOperationCompleted Is Nothing) Then
                Me.searchonenUSOperationCompleted = AddressOf Me.OnsearchonenUSOperationCompleted
            End If
            Me.InvokeAsync("searchonenUS", New Object() {search_string, table_name}, Me.searchonenUSOperationCompleted, userState)
        End Sub
        
        Private Sub OnsearchonenUSOperationCompleted(ByVal arg As Object)
            If (Not (Me.searchonenUSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent searchonenUSCompleted(Me, New searchonenUSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/searchonidext_range", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function searchonidext_range(ByVal IDext_from As Integer, ByVal IDext_to As Integer, ByVal table_name As String) As Answer()
            Dim results() As Object = Me.Invoke("searchonidext_range", New Object() {IDext_from, IDext_to, table_name})
            Return CType(results(0),Answer())
        End Function
        
        '''<remarks/>
        Public Overloads Sub searchonidext_rangeAsync(ByVal IDext_from As Integer, ByVal IDext_to As Integer, ByVal table_name As String)
            Me.searchonidext_rangeAsync(IDext_from, IDext_to, table_name, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub searchonidext_rangeAsync(ByVal IDext_from As Integer, ByVal IDext_to As Integer, ByVal table_name As String, ByVal userState As Object)
            If (Me.searchonidext_rangeOperationCompleted Is Nothing) Then
                Me.searchonidext_rangeOperationCompleted = AddressOf Me.Onsearchonidext_rangeOperationCompleted
            End If
            Me.InvokeAsync("searchonidext_range", New Object() {IDext_from, IDext_to, table_name}, Me.searchonidext_rangeOperationCompleted, userState)
        End Sub
        
        Private Sub Onsearchonidext_rangeOperationCompleted(ByVal arg As Object)
            If (Not (Me.searchonidext_rangeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent searchonidext_rangeCompleted(Me, New searchonidext_rangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/searchonidext", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function searchonidext(ByVal IDext As Integer, ByVal table_name As String) As Answer()
            Dim results() As Object = Me.Invoke("searchonidext", New Object() {IDext, table_name})
            Return CType(results(0),Answer())
        End Function
        
        '''<remarks/>
        Public Overloads Sub searchonidextAsync(ByVal IDext As Integer, ByVal table_name As String)
            Me.searchonidextAsync(IDext, table_name, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub searchonidextAsync(ByVal IDext As Integer, ByVal table_name As String, ByVal userState As Object)
            If (Me.searchonidextOperationCompleted Is Nothing) Then
                Me.searchonidextOperationCompleted = AddressOf Me.OnsearchonidextOperationCompleted
            End If
            Me.InvokeAsync("searchonidext", New Object() {IDext, table_name}, Me.searchonidextOperationCompleted, userState)
        End Sub
        
        Private Sub OnsearchonidextOperationCompleted(ByVal arg As Object)
            If (Not (Me.searchonidextCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent searchonidextCompleted(Me, New searchonidextCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_SystemName", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Get_SystemName(ByVal searchString As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Get_SystemName", New Object() {searchString})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Get_SystemNameAsync(ByVal searchString As String)
            Me.Get_SystemNameAsync(searchString, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Get_SystemNameAsync(ByVal searchString As String, ByVal userState As Object)
            If (Me.Get_SystemNameOperationCompleted Is Nothing) Then
                Me.Get_SystemNameOperationCompleted = AddressOf Me.OnGet_SystemNameOperationCompleted
            End If
            Me.InvokeAsync("Get_SystemName", New Object() {searchString}, Me.Get_SystemNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnGet_SystemNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.Get_SystemNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Get_SystemNameCompleted(Me, New Get_SystemNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMasterTables", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMasterTables() As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetMasterTables", New Object(-1) {})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMasterTablesAsync()
            Me.GetMasterTablesAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMasterTablesAsync(ByVal userState As Object)
            If (Me.GetMasterTablesOperationCompleted Is Nothing) Then
                Me.GetMasterTablesOperationCompleted = AddressOf Me.OnGetMasterTablesOperationCompleted
            End If
            Me.InvokeAsync("GetMasterTables", New Object(-1) {}, Me.GetMasterTablesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMasterTablesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMasterTablesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMasterTablesCompleted(Me, New GetMasterTablesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PreTranslate", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PreTranslate(ByVal TableName As String, ByVal SearchText As String) As String
            Dim results() As Object = Me.Invoke("PreTranslate", New Object() {TableName, SearchText})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub PreTranslateAsync(ByVal TableName As String, ByVal SearchText As String)
            Me.PreTranslateAsync(TableName, SearchText, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PreTranslateAsync(ByVal TableName As String, ByVal SearchText As String, ByVal userState As Object)
            If (Me.PreTranslateOperationCompleted Is Nothing) Then
                Me.PreTranslateOperationCompleted = AddressOf Me.OnPreTranslateOperationCompleted
            End If
            Me.InvokeAsync("PreTranslate", New Object() {TableName, SearchText}, Me.PreTranslateOperationCompleted, userState)
        End Sub
        
        Private Sub OnPreTranslateOperationCompleted(ByVal arg As Object)
            If (Not (Me.PreTranslateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PreTranslateCompleted(Me, New PreTranslateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateActivity", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateActivity(ByVal TimeStamp As Date, ByVal UTCoffset As String, ByVal UserName As String, ByVal TaskType As String, ByVal TaskDetail As String) As Boolean
            Dim results() As Object = Me.Invoke("UpdateActivity", New Object() {TimeStamp, UTCoffset, UserName, TaskType, TaskDetail})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateActivityAsync(ByVal TimeStamp As Date, ByVal UTCoffset As String, ByVal UserName As String, ByVal TaskType As String, ByVal TaskDetail As String)
            Me.UpdateActivityAsync(TimeStamp, UTCoffset, UserName, TaskType, TaskDetail, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateActivityAsync(ByVal TimeStamp As Date, ByVal UTCoffset As String, ByVal UserName As String, ByVal TaskType As String, ByVal TaskDetail As String, ByVal userState As Object)
            If (Me.UpdateActivityOperationCompleted Is Nothing) Then
                Me.UpdateActivityOperationCompleted = AddressOf Me.OnUpdateActivityOperationCompleted
            End If
            Me.InvokeAsync("UpdateActivity", New Object() {TimeStamp, UTCoffset, UserName, TaskType, TaskDetail}, Me.UpdateActivityOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateActivityOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateActivityCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateActivityCompleted(Me, New UpdateActivityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUserList() As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetUserList", New Object(-1) {})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUserListAsync()
            Me.GetUserListAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUserListAsync(ByVal userState As Object)
            If (Me.GetUserListOperationCompleted Is Nothing) Then
                Me.GetUserListOperationCompleted = AddressOf Me.OnGetUserListOperationCompleted
            End If
            Me.InvokeAsync("GetUserList", New Object(-1) {}, Me.GetUserListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUserListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUserListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUserListCompleted(Me, New GetUserListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserActivity", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUserActivity(ByVal UserName As String, ByVal sDate As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetUserActivity", New Object() {UserName, sDate})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUserActivityAsync(ByVal UserName As String, ByVal sDate As String)
            Me.GetUserActivityAsync(UserName, sDate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUserActivityAsync(ByVal UserName As String, ByVal sDate As String, ByVal userState As Object)
            If (Me.GetUserActivityOperationCompleted Is Nothing) Then
                Me.GetUserActivityOperationCompleted = AddressOf Me.OnGetUserActivityOperationCompleted
            End If
            Me.InvokeAsync("GetUserActivity", New Object() {UserName, sDate}, Me.GetUserActivityOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUserActivityOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUserActivityCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUserActivityCompleted(Me, New GetUserActivityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPreviousDateRecords", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPreviousDateRecords(ByVal sDate As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetPreviousDateRecords", New Object() {sDate})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPreviousDateRecordsAsync(ByVal sDate As String)
            Me.GetPreviousDateRecordsAsync(sDate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPreviousDateRecordsAsync(ByVal sDate As String, ByVal userState As Object)
            If (Me.GetPreviousDateRecordsOperationCompleted Is Nothing) Then
                Me.GetPreviousDateRecordsOperationCompleted = AddressOf Me.OnGetPreviousDateRecordsOperationCompleted
            End If
            Me.InvokeAsync("GetPreviousDateRecords", New Object() {sDate}, Me.GetPreviousDateRecordsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPreviousDateRecordsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPreviousDateRecordsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPreviousDateRecordsCompleted(Me, New GetPreviousDateRecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCloud", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub UpdateCloud(ByVal CT As CloudTr)
            Me.Invoke("UpdateCloud", New Object() {CT})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateCloudAsync(ByVal CT As CloudTr)
            Me.UpdateCloudAsync(CT, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateCloudAsync(ByVal CT As CloudTr, ByVal userState As Object)
            If (Me.UpdateCloudOperationCompleted Is Nothing) Then
                Me.UpdateCloudOperationCompleted = AddressOf Me.OnUpdateCloudOperationCompleted
            End If
            Me.InvokeAsync("UpdateCloud", New Object() {CT}, Me.UpdateCloudOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateCloudOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateCloudCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateCloudCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class Answer
        
        Private iDextField As String
        
        Private enUSField As String
        
        Private targetField As String
        
        Private key8_objectnameField As String
        
        Private key6_DomainnameField As String
        
        Private lengthField As String
        
        Private was_cutField As Boolean
        
        Private resultField As Boolean
        
        Private wildcardField As Boolean
        
        '''<remarks/>
        Public Property IDext() As String
            Get
                Return Me.iDextField
            End Get
            Set
                Me.iDextField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property enUS() As String
            Get
                Return Me.enUSField
            End Get
            Set
                Me.enUSField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property target() As String
            Get
                Return Me.targetField
            End Get
            Set
                Me.targetField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property key8_objectname() As String
            Get
                Return Me.key8_objectnameField
            End Get
            Set
                Me.key8_objectnameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property key6_Domainname() As String
            Get
                Return Me.key6_DomainnameField
            End Get
            Set
                Me.key6_DomainnameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property length() As String
            Get
                Return Me.lengthField
            End Get
            Set
                Me.lengthField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property was_cut() As Boolean
            Get
                Return Me.was_cutField
            End Get
            Set
                Me.was_cutField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property result() As Boolean
            Get
                Return Me.resultField
            End Get
            Set
                Me.resultField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property wildcard() As Boolean
            Get
                Return Me.wildcardField
            End Get
            Set
                Me.wildcardField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class CloudTr
        
        Private sourceField As String
        
        Private targetField As String
        
        Private sourceLangField As String
        
        Private targetLangField As String
        
        Private customerField As String
        
        Private instanceField As String
        
        Private datatypeField As String
        
        Private resnameField As String
        
        Private maxlengthField As Integer
        
        Private customerSpecificField As Integer
        
        '''<remarks/>
        Public Property Source() As String
            Get
                Return Me.sourceField
            End Get
            Set
                Me.sourceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Target() As String
            Get
                Return Me.targetField
            End Get
            Set
                Me.targetField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SourceLang() As String
            Get
                Return Me.sourceLangField
            End Get
            Set
                Me.sourceLangField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TargetLang() As String
            Get
                Return Me.targetLangField
            End Get
            Set
                Me.targetLangField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Customer() As String
            Get
                Return Me.customerField
            End Get
            Set
                Me.customerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Instance() As String
            Get
                Return Me.instanceField
            End Get
            Set
                Me.instanceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Datatype() As String
            Get
                Return Me.datatypeField
            End Get
            Set
                Me.datatypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Resname() As String
            Get
                Return Me.resnameField
            End Get
            Set
                Me.resnameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Maxlength() As Integer
            Get
                Return Me.maxlengthField
            End Get
            Set
                Me.maxlengthField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CustomerSpecific() As Integer
            Get
                Return Me.customerSpecificField
            End Get
            Set
                Me.customerSpecificField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetUniqueScriptNamesCompletedEventHandler(ByVal sender As Object, ByVal e As GetUniqueScriptNamesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUniqueScriptNamesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub searchontargetCompletedEventHandler(ByVal sender As Object, ByVal e As searchontargetCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class searchontargetCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Answer()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Answer())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub update_entryCompletedEventHandler(ByVal sender As Object, ByVal e As update_entryCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class update_entryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub searchonenUSCompletedEventHandler(ByVal sender As Object, ByVal e As searchonenUSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class searchonenUSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Answer()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Answer())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub searchonidext_rangeCompletedEventHandler(ByVal sender As Object, ByVal e As searchonidext_rangeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class searchonidext_rangeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Answer()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Answer())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub searchonidextCompletedEventHandler(ByVal sender As Object, ByVal e As searchonidextCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class searchonidextCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Answer()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Answer())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub Get_SystemNameCompletedEventHandler(ByVal sender As Object, ByVal e As Get_SystemNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Get_SystemNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetMasterTablesCompletedEventHandler(ByVal sender As Object, ByVal e As GetMasterTablesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMasterTablesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub PreTranslateCompletedEventHandler(ByVal sender As Object, ByVal e As PreTranslateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PreTranslateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub UpdateActivityCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateActivityCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateActivityCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetUserListCompletedEventHandler(ByVal sender As Object, ByVal e As GetUserListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUserListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetUserActivityCompletedEventHandler(ByVal sender As Object, ByVal e As GetUserActivityCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUserActivityCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetPreviousDateRecordsCompletedEventHandler(ByVal sender As Object, ByVal e As GetPreviousDateRecordsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPreviousDateRecordsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub UpdateCloudCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
End Namespace
